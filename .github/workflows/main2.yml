name: Crawl and Convert to PDF (Puppeteer)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

jobs:
  puppeteer-pdfs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install puppeteer p-limit

      - name: Create URLs list
        run: |
          echo "https://www.lhh.com/en-us" > urls.txt
          echo "https://www.lhh.com/en-us/about" >> urls.txt
          echo "https://www.lhh.com/en-us/industries" >> urls.txt
          echo "https://www.lhh.com/en-us/services" >> urls.txt
          echo "https://www.lhh.com/en-us/contact" >> urls.txt
          echo "https://www.lhh.com/en-us/insights" >> urls.txt

      - name: Generate PDFs using Puppeteer
        run: |
          mkdir -p pdfs
          node <<'EOF'
          const fs = require('fs');
          const puppeteer = require('puppeteer');
          const pLimit = require('p-limit').default; // ‚úÖ FIXED HERE

          const urls = fs.readFileSync('urls.txt', 'utf8').trim().split('\n').filter(Boolean);
          const limit = pLimit(3); // run 3 pages at a time

          (async () => {
            const browser = await puppeteer.launch({
              headless: true,
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });

            const tasks = urls.map(url => limit(async () => {
              const page = await browser.newPage();
              await page.setViewport({ width: 1280, height: 800 });
              try {
                console.log(`üåê Visiting: ${url}`);
                await page.goto(url, { waitUntil: 'networkidle2', timeout: 60000 });
                await new Promise(res => setTimeout(res, 3000)); // wait 3s for JS content

                const safeName = url.replace(/^https?:\/\//, '').replace(/[\/:?&=#]/g, '_');
                const filePath = `pdfs/${safeName}.pdf`;
                await page.pdf({
                  path: filePath,
                  format: 'A4',
                  printBackground: true,
                  margin: { top: '20mm', bottom: '20mm', left: '15mm', right: '15mm' }
                });

                console.log(`‚úÖ Saved: ${filePath}`);
              } catch (err) {
                console.error(`‚ùå Failed: ${url} ‚Äî ${err.message}`);
              } finally {
                await page.close();
              }
            }));

            await Promise.all(tasks);
            await browser.close();
            console.log('üèÅ All PDFs generated successfully!');
          })();
          EOF

      - name: Upload PDFs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lhh-website-pdfs
          path: pdfs/
